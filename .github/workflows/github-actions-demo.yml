name: CI/CD Pipeline Para Proyecto de Laravel

on:
  push:
    branches:
      - master
      - santiago
  pull_request:
    branches:
      - master
      - santiago

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'  # Ajusta la versión de PHP según tu proyecto

      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Build Assets (opcional)
        run: npm install && npm run build

  test:
    runs-on: ubuntu-latest
    needs: build  # Asegúrate de que el trabajo de build se complete antes de ejecutar tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Build Assets
        run: npm install && npm run build  # Asegúrate de generar el Vite manifest

      - name: Set Up Environment Variables
        run: |
          echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env
          # Añadir otras variables de entorno aquí si es necesario

      - name: Run Tests
        run: php artisan test

  deploy:
    runs-on: ubuntu-latest
    needs: test  # Este trabajo solo se ejecutará si los tests pasan
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set Up SSH Key
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          echo "$SSH_KEY" | tr -d '\r' | ssh-add - > /dev/null

      - name: Deploy to Production
        env:
          APP_KEY: ${{ secrets.APP_KEY }}  # Mantiene APP_KEY en el entorno de despliegue
        run: |
          ssh -o StrictHostKeyChecking=no user@server << 'EOF'
            cd /ruta-del-proyecto
            git pull origin master
            composer install --no-dev --optimize-autoloader
            php artisan migrate --force
            php artisan cache:clear
            php artisan config:cache
          EOF


